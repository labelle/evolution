///*      T E X T     */

@import "../variables";
@import "../elements/text_mixins";


/*      TEXT     */

// Default evo-text
// Adjust from settings.scss
#{$evo}-text {
  font-size: #{$text_font_size}
  color: #{$text_color};
  font-family: #{$text_font_family};
  font-weight: #{$text_font_weight};
  line-height: #{$text_line_height};
  margin-top: #{$text_margin_top};
  margin-bottom: #{$text_margin_bottom};
      &-caps {
      @extend #{$evo}-text !optional;
      @include style(caps)
    }
}

// Generates text sizes text-0 through text-24
// Silent classes are available e.g. %text-15
// Based on a half-measure of the golden raito
// 1. @for $i from 0 through 4
// 2. Creates e.g. evo-text- 15 and auto increments by 1
// 3. Extends the default evo-text
// 4. Modifies the tracking and leading via mixins from _text_mixins.scss
// 5.T he brackets here are modifying {font-size: ;} via mixins from _text_mixins.scss
// 6. $-caps etc. is optional fine tuning of typographic styles 

// Mousetype sizes
@for $i from 0 through 4 { // 1
  #{$evo}-text-#{$i} { // 2
  @extend #{$evo}-text; // 3
    @include tracking(loose); // 4
    @include leading(11);
    @if ($i == 0) { @include size(0); } //  5
    @else if ($i == 1) { @include size(1); }
    @else if ($i == 2) { @include size(2); } // smallest
    @else if ($i == 3) { @include size(3); }
    @else if ($i == 4) { @include size(4); } // smaller
    &-caps { // 6
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(null);
      @include leading(12);
    }
  }
}

// Copy sizes
@for $i from 5 through 8 {
  #{$evo}-text-#{$i} {
  @extend #{$evo}-text !optional;
    @include leading(12);
    @if ($i == 5) { @include size(5); }
    @else if ($i == 6) { @include size(6); } // small
    @else if ($i == 7) { @include size(7); }
    @else if ($i == 8) { @include size(8); } // normal
    &-caps {
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(null);
      @include leading(12);
    }
  }
}

// Subheader sizes
@for $i from 9 through 12 {
  #{$evo}-text-#{$i} {
  @extend #{$evo}-text !optional;
    @include tracking(tight);
    @include leading(10);
    @if ($i == 9) { @include size(9); }
    @else if ($i == 10) { @include size(10); } // big
    @else if ($i == 11) { @include size(11); }
    @else if ($i == 12) { @include size(12); } // bigger
    &-caps {
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(tight);
      @include leading(10);
    }
  }
}

// Header sizes
@for $i from 13 through 16 {
  #{$evo}-text-#{$i} {
  @extend #{$evo}-text !optional;
    @include tracking(tight);
    @include leading(10);
    @if ($i == 13) { @include size(13); }
    @else if ($i == 14) { @include size(14); } // biggest
    @else if ($i == 15) { @include size(15); }
    @else if ($i == 16) { @include size(16); } // jumbo
    &-caps {
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(tight);
      @include leading(5);
    }
  }
}

// Giant sizes
@for $i from 17 through 20 {
  #{$evo}-text-#{$i} {
  @extend #{$evo}-text !optional;
    @include tracking(tight);
    @include leading(10);
    @if ($i == 17) { @include size(17); }
    @else if ($i == 18) { @include size(18); } // giant
    @else if ($i == 19) { @include size(19); }
    @else if ($i == 20) { @include size(20); }
    &-caps {
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(tight);
      @include leading(5);
    }
  }
}

// Poster sizes
@for $i from 21 through 24 {
  #{$evo}-text-#{$i} {
  @extend #{$evo}-text !optional;
  @include tracking(tightest);
  @include leading(8);
    @if ($i == 21) { @include size(22); }
    @else if ($i == 22) { @include size(22); }
    @else if ($i == 23) { @include size(23); }
    @else if ($i == 24) { @include size(24); }
    &-caps {
      @extend #{$evo}-text-#{$i} !optional;
      @include style(caps)
      @include tracking(tightest);
      @include leading(4);
    }
  }
}