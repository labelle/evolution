///*      I C O N   B U T T O N    */

@import "../evo_variables/evo_variables";

// Evo icon button
// The label version is for the custom file-upload button
label#{$evo}-icon-button:before,
a#{$evo}-icon-button:before,
button#{$evo}-icon-button:before {
content:''; 
display:inline-block; 
padding-left: 1.25ch;
margin-left: 2.5em;
position: absolute;
height: 1em;
width: 1em;
background-image: url(#{$icon_list_background}); 
background-size: contain;
background-position: center;
background-repeat:no-repeat; 
left: -1.5em;
top: auto; // or 0
vertical-align: middle;
}


label#{$evo}-icon-button,
a#{$evo}-icon-button,
button#{$evo}-icon-button {
    padding-left: 2.5em;
    // margin-left: 1.5em;
    position: relative;
    // list-style-type: none;
    // padding-left: -3em;
}



// Evo List button
a#{$evo}-icon-button-2:before,
button#{$evo}-icon-button-2:before {
content:''; 
display:inline-block; 
padding-left: 1.5em;
margin-left: 1.5em;
position: absolute;
height: 1em;
width: 1em;
background-image: url(#{$icon_list_background}); 
background-size: contain;
background-position: center;
background-repeat:no-repeat; 
left: -1.5em;
top: auto;
vertical-align: middle;
}

a#{$evo}-icon-button-2,
button#{$evo}-icon-button-2 {
    padding-left: 1.5em;
    // margin-left: 1.5em;
    position: relative;
    border: 0;
    // list-style-type: none;
    // padding-left: -3em;
}



// // Place this directly on a link class
// // Make small and large version, each with correct number alignment?
// #{$evo}-bullet-button,
// button#{$evo}-bullet-button,
// a#{$evo}-bullet-button,
// input#{$evo}-bullet-button {
//   // counter-reset: '•';
//   // margin-top: 1.5em;
//   position: relative;
//   padding-left: 3ch; // #{$number_list_padding_left};
//     // margin-bottom: 1.5em;
//   }
// #{$evo}-bullet-button::before,
// button#{$evo}-bullet-button::before,
// a#{$evo}-bullet-button::before,
// input#{$evo}-bullet-button::before {
//   content: '•';
//   // content: counter(awesome-counter, decimal-leading-zero) "."; // Adds a zero and a dot
//   position: absolute;
//   // top: .5em; // use with transform: translateY();
//   left: .2ch; // was left: 0;
//   // transform: translateY(#{$number_list_number_position}); // use with top: 0;
//   background: #{$bullet_list_background_color_1};
//   width: auto;
//   height: auto;
//   border-radius: #{$bullet_list_background_corner};
//   display: inline-block;
//   line-height: inherit; // or #{$body_line_height}, was 1.5em
//   color: #{$bullet_list_bullet_color};
//   text-align: center;
//   font-family: #{$bullet_list_bullet_font_family};
//   opacity: .5;
//   // margin-right: 0.5em;
// }
// #{$evo}-bullet-button::before,
// button#{$evo}-bullet-button::before,
// a#{$evo}-bullet-button::before,
// input#{$evo}-bullet-button::before {
//     padding-left: 1.25ch; // #{$number_list_padding_left};
// }

// #{$evo}-bullet-button:hover::before,
// button#{$evo}-bullet-button:hover::before,
// a#{$evo}-bullet-button:hover::before,
// input#{$evo}-bullet-button:hover::before {
//   color: #{$bullet_list_bullet_color};
//   opacity: 1;
// }


// // #{$evo}-inverse-button,
// // #{$evo}-button,
// // button,
// // [type="button"],
// // [type="reset"],
// // [type="submit"] {
// //      // Type
// //      font-family: #{$button_font_family};
// //      // font-size: #{$button_font_size};
// //      text-align: #{$button_text_align};
// //      // // text-decoration: #{$button_text_decoration}; // Doesn't work
// //      // // color
// //      // color: #{$button_color} !important;
// //      // background-color: #{$button_background_color};
// //      // border-color: #{$button_border_color};
// //      // Structure
// //      border-width: #{$button_border_width};
// //      border-style: #{$button_border_style};
// //      border-radius: #{$button_corner};
// //      // border: #{$button_border};
// //      padding-top: #{$button_padding_top};
// //      padding-bottom: #{$button_padding_bottom};
// //      padding-left: #{$button_padding_left};
// //      padding-right: #{$button_padding_right};
// //      // hover
// //      transition-duration: #{$button_hover_duration};
// //      transition-timing-function: #{$button_hover_timing};
// //      transition-delay: #{$button_hover_delay};
// //      // transition: #{$button_hover_transition}; // this is not needed
// // }

// // #{$evo}-button {
// //      // Type
// //      // font-family: #{$button_font_family};
// //      // font-size: #{$button_font_size};
// //      // text-align: #{$button_text_align};
// //      // text-decoration: #{$button_text_decoration}; // Doesn't work
// //      // color
// //      color: #{$button_color};
// //      background-color: #{$button_background_color};
// //      border-color: #{$button_border_color};
// //      // // Structure
// //      // border-width: #{$button_border_width};
// //      // border-style: #{$button_border_style};
// //      // border-radius: #{$button_corner};
// //      // // border: #{$button_border};
// //      // padding-top: #{$button_padding_top};
// //      // padding-bottom: #{$button_padding_bottom};
// //      // padding-left: #{$button_padding_left};
// //      // padding-right: #{$button_padding_right};
// // }



// // #{$evo}-button:hover,
// // button:hover,
// // [type="button"]:hover,
// // [type="reset"]:hover,
// // [type="submit"]:hover {
// //      // type
// //      // text-decoration: #{$button_hover_text_decoration}; // Doesn't work
// //      // color
// //      color: #{$button_hover_color};
// //      background-color: #{$button_hover_background_color};
// //      border-color: #{$button_hover_border_color};
// //      // structure
// //      border-style: #{$button_hover_border_style};
// //      border-width: #{$button_hover_border_width};
// //      // border: #{$button_hover_border};
// // }


// // // inverse button



// // #{$evo}-button,
// // button,
// // [type="button"],
// // [type="reset"],
// // [type="submit"] {
// //      // Type
// //      font-family: #{$button_font_family};
// //      // font-size: #{$button_font_size};
// //      text-align: #{$button_text_align};
// //      // // text-decoration: #{$button_text_decoration}; // Doesn't work
// //      // // color
// //      // color: #{$button_color} !important;
// //      // background-color: #{$button_background_color};
// //      // border-color: #{$button_border_color};
// //      // Structure
// //      border-width: #{$button_border_width};
// //      border-style: #{$button_border_style};
// //      border-radius: #{$button_corner};
// //      // border: #{$button_border};
// //      padding-top: #{$button_padding_top};
// //      padding-bottom: #{$button_padding_bottom};
// //      padding-left: #{$button_padding_left};
// //      padding-right: #{$button_padding_right};
// //      // hover
// //      transition-duration: #{$button_hover_duration};
// //      transition-timing-function: #{$button_hover_timing};
// //      transition-delay: #{$button_hover_delay};
// //      // transition: #{$button_hover_transition}; // this is not needed
// // }

// // #{$evo}-inverse-button {
// //      // Type
// //      // font-family: #{$button_font_family};
// //      // font-size: #{$button_font_size};
// //      // text-align: #{$button_text_align};
// //      // text-decoration: #{$button_text_decoration}; // Doesn't work
// //      // color
// //      color: #{$inverse_button_color};
// //      background-color: #{$inverse_button_background_color};
// //      border-color: #{$inverse_button_border_color};
// //      // // Structure
// //      // border-width: #{$button_border_width};
// //      // border-style: #{$button_border_style};
// //      // border-radius: #{$button_corner};
// //      // // border: #{$button_border};
// //      // padding-top: #{$button_padding_top};
// //      // padding-bottom: #{$button_padding_bottom};
// //      // padding-left: #{$button_padding_left};
// //      // padding-right: #{$button_padding_right};
// // }



// // #{$evo}-inverse-button:hover {
// //      // type
// //      // text-decoration: #{$button_hover_text_decoration}; // Doesn't work
// //      // color
// //      color: #{$inverse_button_hover_color};
// //      background-color: #{$inverse_button_hover_background_color};
// //      border-color: #{$inverse_button_hover_border_color};
// //      // structure
// //      border-style: #{$inverse_button_hover_border_style};
// //      border-width: #{$inverse_button_hover_border_width};
// //      // border: #{$button_hover_border};
// // }















// // // /////////////////////

// // // http://codepen.io/jasen1/pen/WpQNGm

// // @import "compass/css3";

// // @import url(http://weloveiconfonts.com/api/?family=entypo);

// // /*
// // ================
// // The Icon-object™
// // ================

// // The Icon-Object™ that holds the unicode entities for our icons, so we can reference them by name instead of looking up the hex code every time we need one.
// // */

// // $icons: ('save' '\1F4BE'),
// //         ('delete' '\12as'),
// //         ('fb' '\F30E'),
// //         ('twitter' '\F309'),
// //         ('bolt' '\26A1'),
// //         ('danger' '\26A0'),
// //         ('tick' '\2713');
// // ;


// // /*
// // Color variables are imported from another pen, just to make stuff easier to read
// // */


// // /*
// // =======================
// // The Button Mixin.======
// // =======================

// // =It takes 3 arguments:=
// // - the background-color ($bg),
// // in our case we will pass it the color vars we defined above.

// // - the icon ($icon),
// // takes one of the named icons from the Icon-Object™

// // - the icon position ($iconPosition)
// // Vald values are 'left' and 'right'

// // =And does fancy stuff=
// // 1. Figure out the lightness of the passed background-color via the lightness() function and set either a dark or a light text color.

// // 2. Loop over the Icon-Object™ until the name matches the passed $icon parameter and then

// //   2.1 If $iconPosition == right select the :after element and set the corresponding unicode entity as the 'content' value. 
// // */

// // @mixin button($bg, $rounded: false, $icon:none, $iconPosition: right){
// //   $color: black;
// //   padding: 1.2em 2.3em;
// //   /*
// //   Setting the color based on the background, as described above (1)
// //   */ 
// //   @if lightness($bg) > 68% {
// //     $color: desaturate(darken($bg, 35), 70);
// //     &:hover, &:focus {
// //       background: darken($bg, 5);
// //       color: darken($color, 5);
// //     }
// //   }
// //   @else {
// //     $color: lighten($bg, 35);
// //     &:hover, &:focus {
// //       background: darken($bg, 5);
// //       color: lighten($color, 5);
// //     }
// //   }
  
// //   /*
// //   Adding the icons, see (2)
// //   */
// //   @each $thing in $icons{
// //     @if nth($thing, 1) == $icon {
// //       @if $iconPosition == right {  
// //         padding-right: 3.5em;   
// //         &:after {
// //            content: nth($thing, 2);
// //            right: 1.5em;
// //         }
// //       }
       
// //       @if $iconPosition == left {  
// //         padding-left: 3.5em;     
// //         &:before {
// //            content: nth($thing, 2);
// //            left: 1.5em;
// //         }
// //       }
// //     }
// //   }
  
// //   color: $color;
// //   display: inline-block;
// //   background: $bg;
// //   @include transition(.3s);
// //   font:{
// //     family: sans-serif;
// //     weight: 800;
// //     size: .8em;
// //   }
// //   text:{
// //     transform: uppercase;
// //     decoration: none;
// //   }
// //   @if $rounded == true {border-radius: .7em};
// //   border-bottom: .2em solid darken($bg, 7);
// //   position: relative;
      
// //   &:before, &:after{
// //     display: inline-block;
// //     font-family: entypo;
// //     position: absolute;    
// //   }
          
// //   &:active {
// //     @include transform(scale(.92));
// //   }
// //   &:hover, &:focus {
// //             @if $rounded == true {border-radius: .5em;}
// //     box-shadow: 0 0 0 5px lighten($bg, 20);
// //   }
// // }

// // /*
// // Calling the Mixin for the different buttons
// // */
// // .danger  { @include button($red, false, 'danger')   ;}
// // .signup  { @include button($blue, false, 'tick', left)  ;}
// // .save    { @include button($green, false, 'save', right);}
// // .fb      { @include button($fb-blue, false, 'fb', left); }
// // .twitter { @include button($twitter-blue, false,        'twitter', left); }
// // .power { @include button($yellow, 'bolt', right); }

// // /*
// // Base Styles
// // */
// // .demo a {margin: 1em;}