@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

.test {
  @include calc(width, "25% - 1em");
}

// Will render as

.test {
  width: -webkit-calc(25% - 1em);
  width: calc(25% - 1em);
}


/* ======================================== *//* ======================================== */
/*
/*                                  TEX EVOLUTION */
/*
/* ======================================== *//* ======================================== */

/* ------------------------ *//* --- HEADERS --- *//* ------------------------ */


/* 
- Generates 40 header sizes
- Can change amount of header variations generated by changing value in .generate-headers(40);
- Applies bold, caps, and cold cap style variations for each size
- Additional properies and values can be assigned based on position in iteration
- Create .loose and .tight variations for each size and style combination
*/

$evo: 								".evo";		// replace with custom prefix
$text_color:						#333333;
$text_font:							inherit;
$text_font_weight:					normal;
$text_padding_bottom:				.25rem;
$text_line_height:					1.1rem;

#{$evo}-text {
	color: $text_color;
	font-weight: $text_font_weight;
	font-family: $text_font;
	line-height: $text_line_height;
	padding-bottom:$text_padding_bottom;
	@include calc(letter-spacing, "25% - 1em");
}

@include generate-headers(40);
.generate-headers($n, $i: 1) when ($i =< $n) {
	#{$evo}-text-#{$i} {
		@extend #{$evo}-text;
		font-size: $i*2em/10;
		& when($i >= 30) {
			line-height: 1em;
		}
		&.loose {
			letter-spacing: 1px+($i/10);
		}
		&.tight {
			letter-spacing: 1px-($i/10);
		}
	}
	#{$evo}-text-#{$i}-bold {
		@extend #{$evo}-text;
		font-size: $i*2em/10;
		& when($i >= 30) {
			line-height: 1em;
		}
		font-weight: bold;
		&.loose {
			letter-spacing: 1px+($i/10);
		}
		&.tight {
			letter-spacing: 1px-($i/10);
		}
	}
	#{$evo}-text-#{$i}-caps {
		@extend #{$evo}-text;
		font-size: $i*2em/10;
		& when($i >= 30) {
			line-height: 1em;
		}
		text-transform: uppercase;
		&.loose {
			letter-spacing: 1px+($i/10);
		}
		&.tight {
			letter-spacing: 1px-($i/10);
		}
	}
	#{$evo}-text-#{$i}-bold-caps {
		@extend #{$evo}-text;
		font-size: $i*2em/10;
		& when($i >= 30) {
			line-height: 1em;
		}
		font-weight: bold;
		text-transform: uppercase;
		&.loose {
			letter-spacing: 1px+($i/10);
		}
		&.tight {
			letter-spacing: 1px-($i/10);
		}
	}
	@include generate-headers($n, ($i + 1));
}