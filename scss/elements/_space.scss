///*      S P A C E     */

// Create space between elements

@import "../variables";

/*      SPACE     */
// Silent classes are available
// Resets any styles
#{$evo}-space {
    // height: #{$space_height}; // 1rem
     width: #{$space_width}; // auto
     clear: both;
}

//     // Spacers
// @mixin space($space) {
//   @if $space == null  { @extend %space-2; }
//   @else if $space == smallest    { height: 1px; }
//   @else if $space == smaller     { height: 4px; }
//   @else if $space == small       { height: .625rem; }
//   @else if $space == big         { height: 1.875rem; }
//   @else if $space == bigger      { height: ceil(4.935rem); }
//   @else if $space == loosest     { height: ceil(20.905rem); }
//     // Throw Warnings
//   @else { @warn "Spacers mixin supports: null, smallest, smaller, small, big, bigger, biggest"; }
// }

    // Spacers
@mixin space($space) {
  @if $space == null  { @extend #{$evo}-space-2; }
  @else if $space == smallest    { @extend #{$evo}-space-5; }
  @else if $space == smaller     { @extend #{$evo}-space-10; }
  @else if $space == small       { @extend #{$evo}-space-13; }
  @else if $space == big         { @extend #{$evo}-space-18; }
  @else if $space == bigger      { @extend #{$evo}-space-20; }
  @else if $space == loosest     { @extend #{$evo}-space-24; }
    // Throw Warnings
  @else { @warn "Spacers mixin supports: null, smallest, smaller, small, big, bigger, biggest"; }
}

// Space sizes space-0 through space-24
// Silent classes are available e.g. %space-15
@for $i from 0 through 24 {
    #{$evo}-space-#{$i} {
    @extend #{$evo}-space;
    @if ($i == 0) { height: 1px; }
    @else if ($i == 1) { height: 2px; }
    @else if ($i == 2) { height: 4px; }
    @else if ($i == 3) { height: 6px; }
    @else if ($i == 4) { height: .5rem; }            // 8px
    @else if ($i == 5) { height: .625rem; }          // 10px
    @else if ($i == 6) { height: .75rem; }           // 12px
    @else if ($i == 7) { height: .875rem; }          // 14px
    @else if ($i == 8) { height: floor(1.02rem); }   // 16px
    @else if ($i == 9) { height: 1.125rem; }         // 18px
    @else if ($i == 10) { height: 1.3125rem; }       // 21px
    @else if ($i == 11) { height: 1.4375rem; }       // 23px
    @else if ($i == 12) { height: 1.875rem; }        // 30px
    @else if ($i == 13) { height: 2.3125rem; }       // 37px
    @else if ($i == 14) { height: 2.6875rem; }       // 43px
    @else if ($i == 15) { height: floor(3.05rem); }  // 48px
    @else if ($i == 16) { height: 3.75rem; }         // 60px
    @else if ($i == 17) { height: ceil(4.935rem); }  // 80px 
    @else if ($i == 18) { height: floor(6.1rem); }   // 96px
    @else if ($i == 19) { height: ceil(7.985rem); }  // 128px
    @else if ($i == 20) { height: ceil(9.87rem); }   // 160px
    @else if ($i == 21) { height: ceil(12.92rem); }  // 208px
    @else if ($i == 22) { height: ceil(15.97rem); }  // 256px
    @else if ($i == 23) { height: ceil(20.905rem); } // 336px
    @else if ($i == 24) { height: ceil(25.84rem); }  // 416px
    // @else if ($i == 25) { height: ceil(33.825rem); } // 544px
    // @else if ($i == 26) { height: ceil(41.81rem); }  // 672px
    // @else if ($i == 27) { height: ceil(54.73rem); }  // 880px
    // @else if ($i == 28) { height: ceil(67.65rem); }  // 1088px
    }
  }